buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.3.7'
        classpath "com.craigburke:js-closure-wrap-asset-pipeline:1.1.0"
        classpath "com.craigburke.angular:angular-template-asset-pipeline:2.2.0"
        classpath "com.craigburke.angular:angular-annotate-asset-pipeline:2.1.0"
    }
}

plugins {
    id 'io.spring.dependency-management' version '0.5.1.RELEASE'
    id 'com.moowork.node' version '0.10'
    id 'com.craigburke.bower-installer' version '2.0.1'
}

version "0.1"
group "five15"

apply plugin: "spring-boot"
apply plugin: "war"
apply plugin: "asset-pipeline"
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
    jasmineDependencies = ['karma', 'karma-jasmine@2_0', 'karma-phantomjs-launcher', 'phantomjs']
    karmaExec = file('node_modules/karma/bin/karma')
    karmaConfig = file('grails-app/conf/karma.conf.js')
}

node {
    version = '0.12.5'
    npmVersion = '2.6.0'
    distBaseUrl = 'http://nodejs.org/dist'
    download = true
}

assets {
    minifyJs = true
    minifyCss = true
    configOptions = [
        angular: [moduleNameBase: 'five15']
    ]
    excludes = ['**/*.spec.js']
}

task installJasmine(type: NpmTask) {
    args = ['install'] + jasmineDependencies + ['--silent']
    outputs.files jasmineDependencies.collect { "node_modules/${it.split('@')[0]}" }
}

task jasmineRun(type: NodeTask, dependsOn: installJasmine) {
    script = karmaExec
    args = ['start', karmaConfig.absolutePath, '--single-run']
}

task jasmineWatch(type: NodeTask, dependsOn: installJasmine) {
    script = karmaExec
    args = ['start', karmaConfig.absolutePath]
}

clean {
    delete 'node_modules'
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

bower {
    installBase = 'grails-app/assets/bower'
    
    dependencies {
        'angular'('1.3.x')
        'angular-animate'('1.3.x')
        'angular-mocks'('1.3.x')
        'ui-router'('0.2.x')
        'animate.css'('3.3.x')
        'angular-base64'('2.0.x')
        'angular-bootstrap'('0.13.x')
        'bootstrap'('3.3.x') {
            source 'dist/css/*.min.css' >> 'css'
            source 'dist/fonts/**' >> 'fonts'
            excludes 'jquery'
        }
    }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"

    compile "org.grails.plugins:hibernate"
    compile "org.grails.plugins:cache"
    compile "org.hibernate:hibernate-ehcache"

    runtime "org.grails.plugins:asset-pipeline"
    runtime "com.craigburke.angular:angular-template-asset-pipeline:2.2.0"
    runtime "com.craigburke.angular:angular-annotate-asset-pipeline:2.1.0"
    runtime "com.craigburke:js-closure-wrap-asset-pipeline:1.1.0"

    runtime "org.grails.plugins:scaffolding"

    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"

    // Note: It is recommended to update to a more robust driver (Chrome, Firefox etc.)
    testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.44.0'

    console "org.grails:grails-console"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

run.dependsOn bowerInstall
assetCompile.dependsOn bowerInstall

test.dependsOn jasmineRun