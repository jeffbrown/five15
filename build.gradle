buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:views-gradle:1.0.0.RC2"
        classpath "org.grails.plugins:hibernate4:5.0.0.RC2"
        classpath "com.craigburke.angular:angular-template-asset-pipeline:2.2.6"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.6.4"
        classpath "gradle.plugin.com.craigburke.gradle:karma-gradle:1.2.1"
        classpath "gradle.plugin.com.craigburke.gradle:bower-installer-gradle:2.4.1"
    }
}

version '0.1'
group 'five15'

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.plugins.views-json"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"
apply plugin:"com.craigburke.karma"
apply plugin:"com.craigburke.bower-installer"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    console "org.grails:grails-console"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-async"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:hibernate4"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:views-json"
    compile "org.hibernate:hibernate-ehcache"
    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    compile "org.grails:grails-plugin-gsp"
    compile "com.craigburke.angular:angular-template-asset-pipeline:2.2.6"
    assets "com.craigburke.angular:angular-annotate-asset-pipeline:2.4.0"
    assets "com.craigburke:js-closure-wrap-asset-pipeline:1.2.0"
    runtime "org.grails.plugins:asset-pipeline"
    profile "org.grails.profiles:angular:3.1.0.M3"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
    configOptions = [
            angular: [moduleNameBase: 'five15']
    ]
    excludes = ['**/*.spec.js']
}

bower {
    'angular'('1.4.x') {
        source 'angular.js'
    }
    'angular-resource'('1.4.x') {
        source 'angular-resource.js' >> '/angular/'
    }
    'angular-mocks'('1.4.x') {
        source 'angular-mocks.js' >> '/angular/'
    }
    'angular-animate'('1.4.x') {
        source 'angular-animate.js' >> '/angular/'
    }

    'ui-router'('0.2.x')
    'animate.css'('3.3.x')
    'angular-base64'('2.0.x')
    'angular-bootstrap'('0.13.x')
    'bootstrap'('3.3.x') {
        source 'dist/css/*.min.css' >> 'css/'
        source 'dist/fonts/**' >> 'fonts/'
        excludes 'jquery'
    }
}

karma {
    profile('default')  {
        libraryBases = ['grails-app/assets/bower/']
        libraryFiles = ['angular/angular.js', '**/*.js']

        sourceBases = ['grails-app/assets/javascripts/']
        //To ensure the modules get loaded first
        sourceFiles = ['**/!(controllers|directives|services|domain)/*.js', '**/*.js']

        testBases = ['src/test/assets/']
        testFiles = ['**/*Spec.js']
    }

    browsers = ['PhantomJS']
    frameworks = ['jasmine']
    reporters = ['progress']
}